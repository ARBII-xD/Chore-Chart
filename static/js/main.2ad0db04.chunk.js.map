{"version":3,"sources":["components/InputText.jsx","components/TodoItem.jsx","components/App.jsx","index.js"],"names":["InputText","props","useState","inputText","setInputText","className","onChange","event","newValue","target","value","type","onClick","onAdd","TodoItem","onCheaked","id","text","App","item","additem","deleteItem","previousValue","filter","index","map","todoItem","ReactDOM","render","document","getElementById"],"mappings":"sJAmCeA,MAjCf,SAAmBC,GAIf,MAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,OAEI,cADA,CACA,OAAKC,UAAU,OAAf,UACI,uBAAOC,SAPf,SAAsBC,GAClB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAaI,IAKsBG,KAAK,OAAOD,MAAOP,IAKlD,wBAAQS,QAAS,WAGLX,EAAMY,MAAMV,GACZC,EAAa,MAJzB,SASA,6CCJGU,MAvBf,SAAkBb,GAYd,OAAO,qBACHW,QAAS,WACRX,EAAMc,UAAUd,EAAMe,KAFpB,SAKH,6BAAKf,EAAMgB,UC+CJC,MA9Df,WAEI,MAAsBhB,mBAAS,IAA/B,mBAAOiB,EAAP,KAAaC,EAAb,KAUA,SAASC,EAAWL,GAChBI,GAAQ,SAAAE,GAEJ,OAAQA,EAAcC,QAAO,SAACJ,EAAKK,GAE/B,OAAOA,GAASR,QAK5B,OACI,sBAAKX,UAAU,YAAf,UACA,qBAAKA,UAAU,UAAf,SAEE,+CAGF,cAAC,EAAD,CAEAQ,MAxBJ,SAAkBV,GACdiB,GAAQ,SAAAE,GACJ,MAAM,GAAN,mBAAWA,GAAX,CAA0BnB,UA2B9B,8BACI,6BAECgB,EAAKM,KAAI,SAACC,EAAUF,GAAX,OACV,cAAC,EAAD,CAIAP,KAAMS,EACNV,GAAKQ,EACLT,UAAWM,GAHNG,cC1CjBG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2ad0db04.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction InputText(props){\r\n\r\n      // initially set the input field as \" \".. afterwards any changes occurs to input field will change the state to that particular input\r\n\r\n    const [inputText , setInputText] = useState(\"\");\r\n\r\n    function handleChange(event){\r\n        const newValue = event.target.value;\r\n        setInputText(newValue);\r\n    }\r\n    return(\r\n        // the attr *value* holds the text in the input field \r\n        <div className=\"form\">\r\n            <input onChange={handleChange} type=\"text\" value={inputText} />\r\n\r\n\r\n              {/*When button is clicked, onClick will come into an action and props.onAdd method will call with the inputText as argument  */}\r\n\r\n            <button onClick={()=>\r\n                    {\r\n\r\n                        props.onAdd(inputText);\r\n                        setInputText(\" \");\r\n                    }\r\n                }\r\n            >\r\n                \r\n            <span>Add</span>\r\n\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default InputText","import React from \"react\";\r\n\r\nfunction TodoItem(props){\r\n     // when add button is clicked, it will rendered the TodoItem and will trigger props.onCHeaked method immediately \r\n//   return <li \r\n//     onClick={props.onCheaked(props.id)}>{props.text}</li>\r\n// }\r\n\r\n\r\n\r\n// ________________________________________________________\r\n\r\n// props.onCheaked will only be called when the item got actually clicked. and pass the <<id prop>> to the onCheaked function.. which will become the index of the item in ItemArray.\r\n\r\n    return(<div \r\n        onClick={()=>\r\n        {props.onCheaked(props.id)\r\n        }}\r\n        >\r\n        <li>{props.text}</li>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default TodoItem","import React, {useState} from \"react\";\r\nimport InputText from \"./InputText\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction App(){\r\n      // this state initializes the empty array where the input items are added. \r\n    const [item, additem]=useState([]);\r\n\r\n\r\n      \r\n// here inputText is send as props..from the inputText component\r\n    function addItems(inputText){\r\n        additem(previousValue=>{\r\n            return [...previousValue, inputText]\r\n        })\r\n    }\r\n    function deleteItem(id){\r\n        additem(previousValue=>{\r\n                  // applied filter to return those values having id's !== to the item id(item selected)\r\n            return (previousValue.filter((item,index)=>\r\n            {\r\n                return index != id\r\n            }))\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n        <div className=\"heading\">\r\n\r\n          <h1>Chore-Chart</h1>\r\n        </div>\r\n\r\n        <InputText \r\n              // addItems:: this function is passed as props to the InputText component\r\n        onAdd={addItems}\r\n        \r\n        />\r\n\r\n        \r\n        <div>\r\n            <ul>\r\n                          {/* map function will loop through the whole items array....where todoItem\" is the loop variable*/}\r\n            {item.map((todoItem, index)=>\r\n            <TodoItem \r\n\r\n\r\n            key={index}\r\n            text={todoItem}\r\n            id ={index}\r\n            onCheaked={deleteItem}\r\n\r\n            />\r\n                    \r\n                        )\r\n}\r\n                        \r\n                    \r\n                </ul>\r\n                </div>\r\n                    \r\n            </div>\r\n\r\n    )\r\n\r\n}      \r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\"\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n "],"sourceRoot":""}